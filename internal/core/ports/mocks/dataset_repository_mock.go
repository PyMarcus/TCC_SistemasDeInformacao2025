// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/ports/repositories/dataset_repository.go

// Package mock_repositories is a generated GoMock package.
package mockports

import (
	reflect "reflect"

	domain "github.com/PyMarcus/TCC_SistemasDeInformacao2025/internal/core/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockDatasetRepository is a mock of DatasetRepository interface.
type MockDatasetRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDatasetRepositoryMockRecorder
}

// MockDatasetRepositoryMockRecorder is the mock recorder for MockDatasetRepository.
type MockDatasetRepositoryMockRecorder struct {
	mock *MockDatasetRepository
}

// NewMockDatasetRepository creates a new mock instance.
func NewMockDatasetRepository(ctrl *gomock.Controller) *MockDatasetRepository {
	mock := &MockDatasetRepository{ctrl: ctrl}
	mock.recorder = &MockDatasetRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatasetRepository) EXPECT() *MockDatasetRepositoryMockRecorder {
	return m.recorder
}

// FindAll mocks base method.
func (m *MockDatasetRepository) FindAll() ([]*domain.Datasets, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll")
	ret0, _ := ret[0].([]*domain.Datasets)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockDatasetRepositoryMockRecorder) FindAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockDatasetRepository)(nil).FindAll))
}

// UpdateMarkedByAgent mocks base method.
func (m *MockDatasetRepository) UpdateMarkedByAgent(agent, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMarkedByAgent", agent, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMarkedByAgent indicates an expected call of UpdateMarkedByAgent.
func (mr *MockDatasetRepositoryMockRecorder) UpdateMarkedByAgent(agent, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMarkedByAgent", reflect.TypeOf((*MockDatasetRepository)(nil).UpdateMarkedByAgent), agent, id)
}
