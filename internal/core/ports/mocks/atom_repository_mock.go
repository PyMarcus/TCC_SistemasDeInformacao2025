// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/ports/repositories/atom_repository.go

// Package mock_repositories is a generated GoMock package.
package mockports

import (
	reflect "reflect"

	domain "github.com/PyMarcus/TCC_SistemasDeInformacao2025/internal/core/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockAtom is a mock of Atom interface.
type MockAtom struct {
	ctrl     *gomock.Controller
	recorder *MockAtomMockRecorder
}

// MockAtomMockRecorder is the mock recorder for MockAtom.
type MockAtomMockRecorder struct {
	mock *MockAtom
}

// NewMockAtom creates a new mock instance.
func NewMockAtom(ctrl *gomock.Controller) *MockAtom {
	mock := &MockAtom{ctrl: ctrl}
	mock.recorder = &MockAtomMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAtom) EXPECT() *MockAtomMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAtom) Create(atom *domain.Atom) (uint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", atom)
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockAtomMockRecorder) Create(atom interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAtom)(nil).Create), atom)
}
